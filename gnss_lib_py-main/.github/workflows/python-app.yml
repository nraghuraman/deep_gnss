# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    

jobs:
  build:
    name: Python ${{ matrix.python-version }}, OS ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true # default option selected currently
    # Load cached environment, if it exists
    - name: Load cached poetry environment
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with: 
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.catch-hit != 'true'
      run: poetry install
#     - name: Lint with pylint
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        poetry run pytest --cov=gnss_lib_py/algorithms --cov=gnss_lib_py/core --cov=gnss_lib_py/parsers --cov=gnss_lib_py/utils --cov-report=xml
    - name: Upload coverage report to code-cov
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
    - name: Test if docs are building
      run: |
        ./build_docs.sh
